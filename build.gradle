plugins {
    id 'java'
    id "com.google.protobuf" version "0.8.13" apply true
}

group = 'org.example'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    implementation group: 'org.json', name: 'json', version: '20200518'
    implementation group: 'com.google.protobuf', name: 'protobuf-java', version: '3.18.0'
}

sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/java/buffers'
        }
    }
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.21.1'
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
            }
        }
    }
}

def host = 'localhost'
def port = 9099

task arguments {
    if (project.hasProperty("host")) {
        host = project.getProperty("host")
    }
    if (project.hasProperty("port")) {
        port = project.getProperty("port")
    }
}

test {
    useJUnitPlatform()
}

task runClient(type: JavaExec) {
    group 'client'
    description 'Handles client specific behavior'

    classpath = sourceSets.main.runtimeClasspath

    main = 'Client'
    standardInput = System.in

    args host
    args port
}

task runServer(type: JavaExec) {
    group 'Server'
    description 'Handles server specific behavior'

    classpath = sourceSets.main.runtimeClasspath
    main = 'Server'

    args port
}

task runNode(type: JavaExec) {
    group 'Node'
    description 'Handles node specific behavior'

    classpath = sourceSets.main.runtimeClasspath
    main = 'Node'
    standardInput = System.in

    args host
    args port
}
